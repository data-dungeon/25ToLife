// DO NOT MODIFY THIS FILE, IT HAS BEEN GENERATED.
// File generated by Quazal DDL Compiler, Version 4.1 [SP2] (Build 1224.83)
// Copyright (C) 1998-2004, Quazal Technologies Inc.

#ifndef _TTLRoundDDL_H_
#define _TTLRoundDDL_H_

#include <NetZ.h>
#include "Services/MatchMaking/Protocol/MatchMakingServiceProperties.h"
#include "Services/MatchMaking/Protocol/Gathering.h"

BEGIN_NAMESPACE_QUAZAL;
class TTLRound;
END_NAMESPACE_QUAZAL;

BEGIN_NAMESPACE_QUAZAL;

class DDLCLASS(TTLRound): public Gathering {
public:
    DDLCLASS(TTLRound)() {};
    DDLCLASS(TTLRound)(const DDLCLASS(TTLRound) &oOther):
        isPrivate(oOther.isPrivate),
        levelIndex(oOther.levelIndex),
        gameType(oOther.gameType),
        timeLimit(oOther.timeLimit),
        levelName(oOther.levelName),
        ranking(oOther.ranking)
    {
    }
    virtual ~DDLCLASS(TTLRound)() {};
    const DDLCLASS(TTLRound) &operator=(const DDLCLASS(TTLRound) &oOther);
    qBool operator==(const DDLCLASS(TTLRound) &oOther) const;
    static void Add(Message *pMessageToSend, const DDLCLASS(TTLRound) &oValue);
    static void Extract(Message *pReceivedMessage, DDLCLASS(TTLRound) *pValue);
    DDLTYPE(bool)::CPPType isPrivate;
    DDLTYPE(uint32)::CPPType levelIndex;
    DDLTYPE(uint32)::CPPType gameType;
    DDLTYPE(uint32)::CPPType timeLimit;
    DDLTYPE(string)::CPPType levelName;
    DDLTYPE(uint32)::CPPType ranking;
    public:
	_PR_gathering_methods_pudecl();
    protected:
	_PR_gathering_methods_prdecl();
};


class DDLTYPE(TTLRound): public DDLType {
public:
    typedef TTLRound CPPType;
    static void Add(Message* pMessageToSend, const DDLCLASS(TTLRound)& oTTLRound) {
        DDLCLASS(TTLRound)::Add(pMessageToSend,oTTLRound);
    }
    static void Extract(Message* pReceivedMessage, DDLCLASS(TTLRound)* pTTLRoundToRefresh) {
        DDLCLASS(TTLRound)::Extract(pReceivedMessage,pTTLRoundToRefresh);
    }
};

class TTLRound: public DDLCLASS(TTLRound) {
};


END_NAMESPACE_QUAZAL;

#endif // _TTLRoundDDL.h_H_
