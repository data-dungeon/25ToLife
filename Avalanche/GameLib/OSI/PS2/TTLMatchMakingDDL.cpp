// DO NOT MODIFY THIS FILE, IT HAS BEEN GENERATED.
// File generated by Quazal DDL Compiler, Version 4.1 [SP2] (Build 1224.83)
// Copyright (C) 1998-2004, Quazal Technologies Inc.

#include "TTLMatchMakingDDL.h"
#include <Core/CallContextRegister.h>

USING_NAMESPACE_QUAZAL;

qBool TTLMatchMakingClient::FindByLevelName_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, const DDLTYPE(string)::CPPType& levelName, const ResultRange& range, DDLTYPE(std_list)< DDLTYPE(any)< CLASSMETATYPE(Gathering), DDLTYPE(string) > >::CPPType* lstGathering)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,FindByLevelName)
    _MSG_ADD_VARIABLE(TFindByLevelName_levelName, levelName);
    _MSG_ADD_VARIABLE(TFindByLevelName_range, range);
    _DO_RMC_AddReturnValue(lstGathering);
    return true;
}

qBool TTLMatchMakingClient::FindBySQLQuery_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, const DDLTYPE(string)::CPPType& query, const ResultRange& range, DDLTYPE(std_list)< DDLTYPE(any)< CLASSMETATYPE(Gathering), DDLTYPE(string) > >::CPPType* lstGathering)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,FindBySQLQuery)
    _MSG_ADD_VARIABLE(TFindBySQLQuery_query, query);
    _MSG_ADD_VARIABLE(TFindBySQLQuery_range, range);
    _DO_RMC_AddReturnValue(lstGathering);
    return true;
}

qBool TTLMatchMakingClient::FindByRanking_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, const DDLTYPE(uint32)::CPPType& ranking, const DDLTYPE(uint32)::CPPType& maxdiff, const ResultRange& range, DDLTYPE(std_list)< DDLTYPE(any)< CLASSMETATYPE(Gathering), DDLTYPE(string) > >::CPPType* lstGathering)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,FindByRanking)
    _MSG_ADD_VARIABLE(TFindByRanking_ranking, ranking);
    _MSG_ADD_VARIABLE(TFindByRanking_maxdiff, maxdiff);
    _MSG_ADD_VARIABLE(TFindByRanking_range, range);
    _DO_RMC_AddReturnValue(lstGathering);
    return true;
}

qBool TTLMatchMakingClient::FindRankingPosition_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, const DDLTYPE(uint32)::CPPType& gid, DDLTYPE(uint32)::CPPType* position)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,FindRankingPosition)
    _MSG_ADD_VARIABLE(TFindRankingPosition_gid, gid);
    _DO_RMC_AddReturnValue(position);
    return true;
}

qBool TTLMatchMakingClient::GetTopPlayers_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, const DDLTYPE(uint32)::CPPType& count, DDLTYPE(std_list)< CLASSMETATYPE(TTLStats) >::CPPType* lstGameStats)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,GetTopPlayers)
    _MSG_ADD_VARIABLE(TGetTopPlayers_count, count);
    _DO_RMC_AddReturnValue(lstGameStats);
    return true;
}

qBool TTLMatchMakingClient::GetStatsForPlayers_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, const DDLTYPE(std_list)< DDLTYPE(uint32) >::CPPType& pidList, DDLTYPE(std_list)< CLASSMETATYPE(TTLStats) >::CPPType* lstGameStats)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,GetStatsForPlayers)
    _MSG_ADD_VARIABLE(TGetStatsForPlayers_pidList, pidList);
    _DO_RMC_AddReturnValue(lstGameStats);
    return true;
}

qBool TTLMatchMakingClient::GetLadderStats_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, const DDLTYPE(uint32)::CPPType& pivotPlayer, const DDLTYPE(uint32)::CPPType& count, DDLTYPE(std_list)< CLASSMETATYPE(TTLStats) >::CPPType* lstGameStats)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,GetLadderStats)
    _MSG_ADD_VARIABLE(TGetLadderStats_pivotPlayer, pivotPlayer);
    _MSG_ADD_VARIABLE(TGetLadderStats_count, count);
    _DO_RMC_AddReturnValue(lstGameStats);
    return true;
}

qBool TTLMatchMakingClient::GetAlerts_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, EidosAlerts* outAlerts)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,GetAlerts)
    _DO_RMC_AddReturnValue(outAlerts);
    return true;
}

qBool TTLMatchMakingClient::AddStatsPersonal_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, const DDLTYPE(std_list)< DDLTYPE(float) >::CPPType& statValues)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,AddStatsPersonal)
    _MSG_ADD_VARIABLE(TAddStatsPersonal_statValues, statValues);
    return true;
}

qBool TTLMatchMakingClient::FilterText_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(bool)::CPPType *pReturn, const DDLTYPE(string)::CPPType& textToFilter)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,FilterText)
    _MSG_ADD_VARIABLE(TFilterText_textToFilter, textToFilter);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::FriendInvite_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(bool)::CPPType *pReturn, const DDLTYPE(string)::CPPType& strPlayer)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,FriendInvite)
    _MSG_ADD_VARIABLE(TFriendInvite_strPlayer, strPlayer);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::FriendInviteByID_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(bool)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& uiPlayer)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,FriendInviteByID)
    _MSG_ADD_VARIABLE(TFriendInviteByID_uiPlayer, uiPlayer);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::FriendAccept_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(bool)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& uiPlayer)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,FriendAccept)
    _MSG_ADD_VARIABLE(TFriendAccept_uiPlayer, uiPlayer);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::FriendReject_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(bool)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& uiPlayer, const DDLTYPE(bool)::CPPType& bBlock)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,FriendReject)
    _MSG_ADD_VARIABLE(TFriendReject_uiPlayer, uiPlayer);
    _MSG_ADD_VARIABLE(TFriendReject_bBlock, bBlock);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::FriendDelete_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(bool)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& uiPlayer)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,FriendDelete)
    _MSG_ADD_VARIABLE(TFriendDelete_uiPlayer, uiPlayer);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::FriendsQuery_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, const DDLTYPE(string)::CPPType& strLocale, DDLTYPE(std_list)< CLASSMETATYPE(EidosFriend) >::CPPType* lstFriendsList)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,FriendsQuery)
    _MSG_ADD_VARIABLE(TFriendsQuery_strLocale, strLocale);
    _DO_RMC_AddReturnValue(lstFriendsList);
    return true;
}

qBool TTLMatchMakingClient::ClanGetMyClanInfo_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, EidosClanProps* outProps, EidosClanMember* outPlayer)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanGetMyClanInfo)
    _DO_RMC_AddReturnValue(pReturn);
    _DO_RMC_AddReturnValue(outProps);
    _DO_RMC_AddReturnValue(outPlayer);
    return true;
}

qBool TTLMatchMakingClient::ClanCreateClan_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(string)::CPPType& inClanName, const DDLTYPE(string)::CPPType& inClanAbbr)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanCreateClan)
    _MSG_ADD_VARIABLE(TClanCreateClan_inClanName, inClanName);
    _MSG_ADD_VARIABLE(TClanCreateClan_inClanAbbr, inClanAbbr);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::ClanGetMyClanMembershipList_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, DDLTYPE(std_list)< CLASSMETATYPE(EidosClanMember) >::CPPType* outMembers)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanGetMyClanMembershipList)
    _DO_RMC_AddReturnValue(pReturn);
    _DO_RMC_AddReturnValue(outMembers);
    return true;
}

qBool TTLMatchMakingClient::ClanGetClanIDListForPlayer_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& inPid, DDLTYPE(std_list)< DDLTYPE(uint32) >::CPPType* outClansList)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanGetClanIDListForPlayer)
    _MSG_ADD_VARIABLE(TClanGetClanIDListForPlayer_inPid, inPid);
    _DO_RMC_AddReturnValue(pReturn);
    _DO_RMC_AddReturnValue(outClansList);
    return true;
}

qBool TTLMatchMakingClient::ClanGetClanInfoFromClanID_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& inCid, EidosClanProps* outProps)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanGetClanInfoFromClanID)
    _MSG_ADD_VARIABLE(TClanGetClanInfoFromClanID_inCid, inCid);
    _DO_RMC_AddReturnValue(pReturn);
    _DO_RMC_AddReturnValue(outProps);
    return true;
}

qBool TTLMatchMakingClient::ClanGetMyInvitations_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, DDLTYPE(std_list)< CLASSMETATYPE(EidosClanInvite) >::CPPType* outInvitesToMe, DDLTYPE(std_list)< CLASSMETATYPE(EidosClanInvite) >::CPPType* outInvitesFromMe)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanGetMyInvitations)
    _DO_RMC_AddReturnValue(pReturn);
    _DO_RMC_AddReturnValue(outInvitesToMe);
    _DO_RMC_AddReturnValue(outInvitesFromMe);
    return true;
}

qBool TTLMatchMakingClient::ClanInvitePlayer_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(string)::CPPType& playerToInvite)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanInvitePlayer)
    _MSG_ADD_VARIABLE(TClanInvitePlayer_playerToInvite, playerToInvite);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::ClanCancelInvitation_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(string)::CPPType& playerToUninvite)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanCancelInvitation)
    _MSG_ADD_VARIABLE(TClanCancelInvitation_playerToUninvite, playerToUninvite);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::ClanAcceptInvitation_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& clanIDInviter, const DDLTYPE(string)::CPPType& playerNameInviter)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanAcceptInvitation)
    _MSG_ADD_VARIABLE(TClanAcceptInvitation_clanIDInviter, clanIDInviter);
    _MSG_ADD_VARIABLE(TClanAcceptInvitation_playerNameInviter, playerNameInviter);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::ClanRejectInvitation_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& clanIDInviter, const DDLTYPE(string)::CPPType& playerNameInviter)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanRejectInvitation)
    _MSG_ADD_VARIABLE(TClanRejectInvitation_clanIDInviter, clanIDInviter);
    _MSG_ADD_VARIABLE(TClanRejectInvitation_playerNameInviter, playerNameInviter);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::ClanBlockInvitation_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& clanIDInviter, const DDLTYPE(string)::CPPType& playerNameInviter)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanBlockInvitation)
    _MSG_ADD_VARIABLE(TClanBlockInvitation_clanIDInviter, clanIDInviter);
    _MSG_ADD_VARIABLE(TClanBlockInvitation_playerNameInviter, playerNameInviter);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::ClanSetInvitationStatus_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(bool)::CPPType& isAcceptingInvites)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanSetInvitationStatus)
    _MSG_ADD_VARIABLE(TClanSetInvitationStatus_isAcceptingInvites, isAcceptingInvites);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::ClanRemoveMember_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& playerToRemove)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanRemoveMember)
    _MSG_ADD_VARIABLE(TClanRemoveMember_playerToRemove, playerToRemove);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::ClanAbandonClan_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanAbandonClan)
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::ClanPromote_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& playerToPromote)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanPromote)
    _MSG_ADD_VARIABLE(TClanPromote_playerToPromote, playerToPromote);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::ClanDemote_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& playerToDemote)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanDemote)
    _MSG_ADD_VARIABLE(TClanDemote_playerToDemote, playerToDemote);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::ClanNewLeader_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& playerNewLeader)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanNewLeader)
    _MSG_ADD_VARIABLE(TClanNewLeader_playerNewLeader, playerNewLeader);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::ClanPostNotice_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(string)::CPPType& newNotice)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanPostNotice)
    _MSG_ADD_VARIABLE(TClanPostNotice_newNotice, newNotice);
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::ClanGetMyNotices_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn, DDLTYPE(std_list)< CLASSMETATYPE(EidosClanNotice) >::CPPType* outNotices)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanGetMyNotices)
    _DO_RMC_AddReturnValue(pReturn);
    _DO_RMC_AddReturnValue(outNotices);
    return true;
}

qBool TTLMatchMakingClient::ClanMarkAlertKickedRead_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, DDLTYPE(uint32)::CPPType *pReturn)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,ClanMarkAlertKickedRead)
    _DO_RMC_AddReturnValue(pReturn);
    return true;
}

qBool TTLMatchMakingClient::GetTopClans_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, const DDLTYPE(uint32)::CPPType& count, DDLTYPE(std_list)< CLASSMETATYPE(EidosClanProps) >::CPPType* lstClanStats)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,GetTopClans)
    _MSG_ADD_VARIABLE(TGetTopClans_count, count);
    _DO_RMC_AddReturnValue(lstClanStats);
    return true;
}

qBool TTLMatchMakingClient::GetMessageOfTheDay_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, const DDLTYPE(string)::CPPType& inLanguage, DDLTYPE(string)::CPPType* outMessage)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,GetMessageOfTheDay)
    _MSG_ADD_VARIABLE(TGetMessageOfTheDay_inLanguage, inLanguage);
    _DO_RMC_AddReturnValue(outMessage);
    return true;
}

qBool TTLMatchMakingClient::GetEidosAccountInfo_PrepareRequest( ProtocolCallContext *pContext, Message *pMsg, EidosAccountPrivate* outPrivateData, EidosAccountPublic* outPublicData, DDLTYPE(string)::CPPType* email)
{
    PROTO_RMC_INITREQUEST(TTLMatchMaking,GetEidosAccountInfo)
    _DO_RMC_AddReturnValue(outPrivateData);
    _DO_RMC_AddReturnValue(outPublicData);
    _DO_RMC_AddReturnValue(email);
    return true;
}

qBool TTLMatchMakingClient::CallFindByLevelName(ProtocolCallContext *pContext, const DDLTYPE(string)::CPPType& levelName, const ResultRange& range, DDLTYPE(std_list)< DDLTYPE(any)< CLASSMETATYPE(Gathering), DDLTYPE(string) > >::CPPType* lstGathering)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,FindByLevelName);
    _MSG_ADD_VARIABLE(TFindByLevelName_levelName, levelName);
    _MSG_ADD_VARIABLE(TFindByLevelName_range, range);
    _DO_RMC_AddReturnValue(lstGathering);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallFindBySQLQuery(ProtocolCallContext *pContext, const DDLTYPE(string)::CPPType& query, const ResultRange& range, DDLTYPE(std_list)< DDLTYPE(any)< CLASSMETATYPE(Gathering), DDLTYPE(string) > >::CPPType* lstGathering)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,FindBySQLQuery);
    _MSG_ADD_VARIABLE(TFindBySQLQuery_query, query);
    _MSG_ADD_VARIABLE(TFindBySQLQuery_range, range);
    _DO_RMC_AddReturnValue(lstGathering);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallFindByRanking(ProtocolCallContext *pContext, const DDLTYPE(uint32)::CPPType& ranking, const DDLTYPE(uint32)::CPPType& maxdiff, const ResultRange& range, DDLTYPE(std_list)< DDLTYPE(any)< CLASSMETATYPE(Gathering), DDLTYPE(string) > >::CPPType* lstGathering)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,FindByRanking);
    _MSG_ADD_VARIABLE(TFindByRanking_ranking, ranking);
    _MSG_ADD_VARIABLE(TFindByRanking_maxdiff, maxdiff);
    _MSG_ADD_VARIABLE(TFindByRanking_range, range);
    _DO_RMC_AddReturnValue(lstGathering);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallFindRankingPosition(ProtocolCallContext *pContext, const DDLTYPE(uint32)::CPPType& gid, DDLTYPE(uint32)::CPPType* position)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,FindRankingPosition);
    _MSG_ADD_VARIABLE(TFindRankingPosition_gid, gid);
    _DO_RMC_AddReturnValue(position);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallGetTopPlayers(ProtocolCallContext *pContext, const DDLTYPE(uint32)::CPPType& count, DDLTYPE(std_list)< CLASSMETATYPE(TTLStats) >::CPPType* lstGameStats)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,GetTopPlayers);
    _MSG_ADD_VARIABLE(TGetTopPlayers_count, count);
    _DO_RMC_AddReturnValue(lstGameStats);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallGetStatsForPlayers(ProtocolCallContext *pContext, const DDLTYPE(std_list)< DDLTYPE(uint32) >::CPPType& pidList, DDLTYPE(std_list)< CLASSMETATYPE(TTLStats) >::CPPType* lstGameStats)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,GetStatsForPlayers);
    _MSG_ADD_VARIABLE(TGetStatsForPlayers_pidList, pidList);
    _DO_RMC_AddReturnValue(lstGameStats);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallGetLadderStats(ProtocolCallContext *pContext, const DDLTYPE(uint32)::CPPType& pivotPlayer, const DDLTYPE(uint32)::CPPType& count, DDLTYPE(std_list)< CLASSMETATYPE(TTLStats) >::CPPType* lstGameStats)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,GetLadderStats);
    _MSG_ADD_VARIABLE(TGetLadderStats_pivotPlayer, pivotPlayer);
    _MSG_ADD_VARIABLE(TGetLadderStats_count, count);
    _DO_RMC_AddReturnValue(lstGameStats);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallGetAlerts(ProtocolCallContext *pContext, EidosAlerts* outAlerts)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,GetAlerts);
    _DO_RMC_AddReturnValue(outAlerts);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallAddStatsPersonal(ProtocolCallContext *pContext, const DDLTYPE(std_list)< DDLTYPE(float) >::CPPType& statValues)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,AddStatsPersonal);
    _MSG_ADD_VARIABLE(TAddStatsPersonal_statValues, statValues);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallFilterText(ProtocolCallContext *pContext, DDLTYPE(bool)::CPPType *pReturn, const DDLTYPE(string)::CPPType& textToFilter)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,FilterText);
    _MSG_ADD_VARIABLE(TFilterText_textToFilter, textToFilter);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallFriendInvite(ProtocolCallContext *pContext, DDLTYPE(bool)::CPPType *pReturn, const DDLTYPE(string)::CPPType& strPlayer)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,FriendInvite);
    _MSG_ADD_VARIABLE(TFriendInvite_strPlayer, strPlayer);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallFriendInviteByID(ProtocolCallContext *pContext, DDLTYPE(bool)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& uiPlayer)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,FriendInviteByID);
    _MSG_ADD_VARIABLE(TFriendInviteByID_uiPlayer, uiPlayer);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallFriendAccept(ProtocolCallContext *pContext, DDLTYPE(bool)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& uiPlayer)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,FriendAccept);
    _MSG_ADD_VARIABLE(TFriendAccept_uiPlayer, uiPlayer);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallFriendReject(ProtocolCallContext *pContext, DDLTYPE(bool)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& uiPlayer, const DDLTYPE(bool)::CPPType& bBlock)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,FriendReject);
    _MSG_ADD_VARIABLE(TFriendReject_uiPlayer, uiPlayer);
    _MSG_ADD_VARIABLE(TFriendReject_bBlock, bBlock);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallFriendDelete(ProtocolCallContext *pContext, DDLTYPE(bool)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& uiPlayer)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,FriendDelete);
    _MSG_ADD_VARIABLE(TFriendDelete_uiPlayer, uiPlayer);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallFriendsQuery(ProtocolCallContext *pContext, const DDLTYPE(string)::CPPType& strLocale, DDLTYPE(std_list)< CLASSMETATYPE(EidosFriend) >::CPPType* lstFriendsList)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,FriendsQuery);
    _MSG_ADD_VARIABLE(TFriendsQuery_strLocale, strLocale);
    _DO_RMC_AddReturnValue(lstFriendsList);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanGetMyClanInfo(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, EidosClanProps* outProps, EidosClanMember* outPlayer)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanGetMyClanInfo);
    _DO_RMC_AddReturnValue(pReturn);
    _DO_RMC_AddReturnValue(outProps);
    _DO_RMC_AddReturnValue(outPlayer);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanCreateClan(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(string)::CPPType& inClanName, const DDLTYPE(string)::CPPType& inClanAbbr)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanCreateClan);
    _MSG_ADD_VARIABLE(TClanCreateClan_inClanName, inClanName);
    _MSG_ADD_VARIABLE(TClanCreateClan_inClanAbbr, inClanAbbr);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanGetMyClanMembershipList(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, DDLTYPE(std_list)< CLASSMETATYPE(EidosClanMember) >::CPPType* outMembers)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanGetMyClanMembershipList);
    _DO_RMC_AddReturnValue(pReturn);
    _DO_RMC_AddReturnValue(outMembers);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanGetClanIDListForPlayer(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& inPid, DDLTYPE(std_list)< DDLTYPE(uint32) >::CPPType* outClansList)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanGetClanIDListForPlayer);
    _MSG_ADD_VARIABLE(TClanGetClanIDListForPlayer_inPid, inPid);
    _DO_RMC_AddReturnValue(pReturn);
    _DO_RMC_AddReturnValue(outClansList);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanGetClanInfoFromClanID(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& inCid, EidosClanProps* outProps)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanGetClanInfoFromClanID);
    _MSG_ADD_VARIABLE(TClanGetClanInfoFromClanID_inCid, inCid);
    _DO_RMC_AddReturnValue(pReturn);
    _DO_RMC_AddReturnValue(outProps);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanGetMyInvitations(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, DDLTYPE(std_list)< CLASSMETATYPE(EidosClanInvite) >::CPPType* outInvitesToMe, DDLTYPE(std_list)< CLASSMETATYPE(EidosClanInvite) >::CPPType* outInvitesFromMe)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanGetMyInvitations);
    _DO_RMC_AddReturnValue(pReturn);
    _DO_RMC_AddReturnValue(outInvitesToMe);
    _DO_RMC_AddReturnValue(outInvitesFromMe);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanInvitePlayer(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(string)::CPPType& playerToInvite)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanInvitePlayer);
    _MSG_ADD_VARIABLE(TClanInvitePlayer_playerToInvite, playerToInvite);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanCancelInvitation(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(string)::CPPType& playerToUninvite)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanCancelInvitation);
    _MSG_ADD_VARIABLE(TClanCancelInvitation_playerToUninvite, playerToUninvite);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanAcceptInvitation(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& clanIDInviter, const DDLTYPE(string)::CPPType& playerNameInviter)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanAcceptInvitation);
    _MSG_ADD_VARIABLE(TClanAcceptInvitation_clanIDInviter, clanIDInviter);
    _MSG_ADD_VARIABLE(TClanAcceptInvitation_playerNameInviter, playerNameInviter);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanRejectInvitation(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& clanIDInviter, const DDLTYPE(string)::CPPType& playerNameInviter)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanRejectInvitation);
    _MSG_ADD_VARIABLE(TClanRejectInvitation_clanIDInviter, clanIDInviter);
    _MSG_ADD_VARIABLE(TClanRejectInvitation_playerNameInviter, playerNameInviter);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanBlockInvitation(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& clanIDInviter, const DDLTYPE(string)::CPPType& playerNameInviter)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanBlockInvitation);
    _MSG_ADD_VARIABLE(TClanBlockInvitation_clanIDInviter, clanIDInviter);
    _MSG_ADD_VARIABLE(TClanBlockInvitation_playerNameInviter, playerNameInviter);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanSetInvitationStatus(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(bool)::CPPType& isAcceptingInvites)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanSetInvitationStatus);
    _MSG_ADD_VARIABLE(TClanSetInvitationStatus_isAcceptingInvites, isAcceptingInvites);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanRemoveMember(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& playerToRemove)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanRemoveMember);
    _MSG_ADD_VARIABLE(TClanRemoveMember_playerToRemove, playerToRemove);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanAbandonClan(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanAbandonClan);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanPromote(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& playerToPromote)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanPromote);
    _MSG_ADD_VARIABLE(TClanPromote_playerToPromote, playerToPromote);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanDemote(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& playerToDemote)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanDemote);
    _MSG_ADD_VARIABLE(TClanDemote_playerToDemote, playerToDemote);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanNewLeader(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(uint32)::CPPType& playerNewLeader)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanNewLeader);
    _MSG_ADD_VARIABLE(TClanNewLeader_playerNewLeader, playerNewLeader);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanPostNotice(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, const DDLTYPE(string)::CPPType& newNotice)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanPostNotice);
    _MSG_ADD_VARIABLE(TClanPostNotice_newNotice, newNotice);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanGetMyNotices(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn, DDLTYPE(std_list)< CLASSMETATYPE(EidosClanNotice) >::CPPType* outNotices)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanGetMyNotices);
    _DO_RMC_AddReturnValue(pReturn);
    _DO_RMC_AddReturnValue(outNotices);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallClanMarkAlertKickedRead(ProtocolCallContext *pContext, DDLTYPE(uint32)::CPPType *pReturn)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,ClanMarkAlertKickedRead);
    _DO_RMC_AddReturnValue(pReturn);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallGetTopClans(ProtocolCallContext *pContext, const DDLTYPE(uint32)::CPPType& count, DDLTYPE(std_list)< CLASSMETATYPE(EidosClanProps) >::CPPType* lstClanStats)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,GetTopClans);
    _MSG_ADD_VARIABLE(TGetTopClans_count, count);
    _DO_RMC_AddReturnValue(lstClanStats);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallGetMessageOfTheDay(ProtocolCallContext *pContext, const DDLTYPE(string)::CPPType& inLanguage, DDLTYPE(string)::CPPType* outMessage)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,GetMessageOfTheDay);
    _MSG_ADD_VARIABLE(TGetMessageOfTheDay_inLanguage, inLanguage);
    _DO_RMC_AddReturnValue(outMessage);
    PROTO_RMC_SENDMESSAGE();
}

qBool TTLMatchMakingClient::CallGetEidosAccountInfo(ProtocolCallContext *pContext, EidosAccountPrivate* outPrivateData, EidosAccountPublic* outPublicData, DDLTYPE(string)::CPPType* email)
{
    PROTO_RMC_INITCALL(TTLMatchMaking,GetEidosAccountInfo);
    _DO_RMC_AddReturnValue(outPrivateData);
    _DO_RMC_AddReturnValue(outPublicData);
    _DO_RMC_AddReturnValue(email);
    PROTO_RMC_SENDMESSAGE();
}


void DDLPROTOCOL(TTLMatchMakingServer)::DispatchProtocolMessage( Message *pMessage, Message *pReturn, qBool *boReturnsMessage, EndPoint * /*pEndPoint*/)
{
    PROTO_DISPATCHIMPL_START();
    
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, FindByLevelName);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, FindBySQLQuery);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, FindByRanking);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, FindRankingPosition);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, GetTopPlayers);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, GetStatsForPlayers);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, GetLadderStats);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, GetAlerts);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, AddStatsPersonal);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, FilterText);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, FriendInvite);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, FriendInviteByID);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, FriendAccept);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, FriendReject);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, FriendDelete);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, FriendsQuery);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanGetMyClanInfo);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanCreateClan);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanGetMyClanMembershipList);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanGetClanIDListForPlayer);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanGetClanInfoFromClanID);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanGetMyInvitations);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanInvitePlayer);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanCancelInvitation);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanAcceptInvitation);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanRejectInvitation);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanBlockInvitation);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanSetInvitationStatus);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanRemoveMember);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanAbandonClan);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanPromote);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanDemote);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanNewLeader);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanPostNotice);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanGetMyNotices);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, ClanMarkAlertKickedRead);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, GetTopClans);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, GetMessageOfTheDay);
    PROTO_DISPATCHIMPL_RETURN_STUB(TTLMatchMaking, GetEidosAccountInfo);
    
    PROTO_DISPATCHIMPL_END();
};

void TTLMatchMakingClient::ExtractCallSpecificResults(Message *pMessage, ProtocolCallContext* pContext)
{
    PROTO_DISPATCHIMPL_START();
    
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, FindByLevelName);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, FindBySQLQuery);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, FindByRanking);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, FindRankingPosition);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, GetTopPlayers);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, GetStatsForPlayers);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, GetLadderStats);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, GetAlerts);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, AddStatsPersonal);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, FilterText);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, FriendInvite);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, FriendInviteByID);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, FriendAccept);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, FriendReject);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, FriendDelete);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, FriendsQuery);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanGetMyClanInfo);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanCreateClan);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanGetMyClanMembershipList);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanGetClanIDListForPlayer);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanGetClanInfoFromClanID);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanGetMyInvitations);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanInvitePlayer);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanCancelInvitation);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanAcceptInvitation);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanRejectInvitation);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanBlockInvitation);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanSetInvitationStatus);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanRemoveMember);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanAbandonClan);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanPromote);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanDemote);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanNewLeader);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanPostNotice);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanGetMyNotices);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, ClanMarkAlertKickedRead);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, GetTopClans);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, GetMessageOfTheDay);
    PROTO_DISPATCHIMPL_PROCESSRESULT_STUB(TTLMatchMaking, GetEidosAccountInfo);
    
    PROTO_DISPATCHIMPL_END();
};

