// DO NOT MODIFY THIS FILE, IT HAS BEEN GENERATED.
// File generated by Quazal DDL Compiler, Version 4.1 [SP2] (Build 1224.83)
// Copyright (C) 1998-2004, Quazal Technologies Inc.

#ifndef _DSTalkerPropsDDL_H_
#define _DSTalkerPropsDDL_H_

#include <NetZ.h>
BEGIN_NAMESPACE_QUAZAL;
class DATASET(DSTalkerProps): public DataSet {
public:
	_DS_GENERAL_DECLARATIONS(DSTalkerProps);
	DATASET(DSTalkerProps)( const DATASET(DSTalkerProps) &oOther ) :
		d_environ(oOther.d_environ), 
		d_headset(oOther.d_headset), 
		d_id(oOther.d_id), 
		d_pitchOffset(oOther.d_pitchOffset), 
		d_pitchWarp(oOther.d_pitchWarp), 
		d_robot(oOther.d_robot), 
		d_spectrumLedge(oOther.d_spectrumLedge), 
		d_spectrumOffset(oOther.d_spectrumOffset), 
		d_spectrumWarp(oOther.d_spectrumWarp), 
		d_userFlags(oOther.d_userFlags), 
		d_voiceToSpeakers(oOther.d_voiceToSpeakers), 
		d_whisper(oOther.d_whisper)
	{
	}

	_DS_ASSIGN_OPERATOR(DSTalkerProps){
		_DS_COPYDATASET_VAR(d_environ);
		_DS_COPYDATASET_VAR(d_headset);
		_DS_COPYDATASET_VAR(d_id);
		_DS_COPYDATASET_VAR(d_pitchOffset);
		_DS_COPYDATASET_VAR(d_pitchWarp);
		_DS_COPYDATASET_VAR(d_robot);
		_DS_COPYDATASET_VAR(d_spectrumLedge);
		_DS_COPYDATASET_VAR(d_spectrumOffset);
		_DS_COPYDATASET_VAR(d_spectrumWarp);
		_DS_COPYDATASET_VAR(d_userFlags);
		_DS_COPYDATASET_VAR(d_voiceToSpeakers);
		_DS_COPYDATASET_VAR(d_whisper);
	}

	_DS_EQUAL_OPERATOR(DSTalkerProps){
		_DS_EQUAL_VAR(d_environ);
		_DS_EQUAL_VAR(d_headset);
		_DS_EQUAL_VAR(d_id);
		_DS_EQUAL_VAR(d_pitchOffset);
		_DS_EQUAL_VAR(d_pitchWarp);
		_DS_EQUAL_VAR(d_robot);
		_DS_EQUAL_VAR(d_spectrumLedge);
		_DS_EQUAL_VAR(d_spectrumOffset);
		_DS_EQUAL_VAR(d_spectrumWarp);
		_DS_EQUAL_VAR(d_userFlags);
		_DS_EQUAL_VAR(d_voiceToSpeakers);
		_DS_EQUAL_VAR(d_whisper);
		return true;
	}

	_DS_TMPL_EQUAL_OPERATOR(DSTalkerProps)
	void ExtractFrom(Message* pMsg) {
		_MSG_EXTRACT_VARIABLE(Td_environ,d_environ);
		_MSG_EXTRACT_VARIABLE(Td_headset,d_headset);
		_MSG_EXTRACT_VARIABLE(Td_id,d_id);
		_MSG_EXTRACT_VARIABLE(Td_pitchOffset,d_pitchOffset);
		_MSG_EXTRACT_VARIABLE(Td_pitchWarp,d_pitchWarp);
		_MSG_EXTRACT_VARIABLE(Td_robot,d_robot);
		_MSG_EXTRACT_VARIABLE(Td_spectrumLedge,d_spectrumLedge);
		_MSG_EXTRACT_VARIABLE(Td_spectrumOffset,d_spectrumOffset);
		_MSG_EXTRACT_VARIABLE(Td_spectrumWarp,d_spectrumWarp);
		_MSG_EXTRACT_VARIABLE(Td_userFlags,d_userFlags);
		_MSG_EXTRACT_VARIABLE(Td_voiceToSpeakers,d_voiceToSpeakers);
		_MSG_EXTRACT_VARIABLE(Td_whisper,d_whisper);
	}

	DDLTYPE(int16)::CPPType d_environ;
	DDLTYPE(bool)::CPPType d_headset;
	DDLTYPE(int64)::CPPType d_id;
	DDLTYPE(float)::CPPType d_pitchOffset;
	DDLTYPE(float)::CPPType d_pitchWarp;
	DDLTYPE(float)::CPPType d_robot;
	DDLTYPE(float)::CPPType d_spectrumLedge;
	DDLTYPE(float)::CPPType d_spectrumOffset;
	DDLTYPE(float)::CPPType d_spectrumWarp;
	DDLTYPE(int32)::CPPType d_userFlags;
	DDLTYPE(bool)::CPPType d_voiceToSpeakers;
	DDLTYPE(float)::CPPType d_whisper;
	_PR_upon_request_filter_pudecl();

protected:
	_PR_upon_request_filter_prdecl();
private:
	typedef DDLTYPE(int16) Td_environ;
	typedef DDLTYPE(bool) Td_headset;
	typedef DDLTYPE(int64) Td_id;
	typedef DDLTYPE(float) Td_pitchOffset;
	typedef DDLTYPE(float) Td_pitchWarp;
	typedef DDLTYPE(float) Td_robot;
	typedef DDLTYPE(float) Td_spectrumLedge;
	typedef DDLTYPE(float) Td_spectrumOffset;
	typedef DDLTYPE(float) Td_spectrumWarp;
	typedef DDLTYPE(int32) Td_userFlags;
	typedef DDLTYPE(bool) Td_voiceToSpeakers;
	typedef DDLTYPE(float) Td_whisper;
};

#define _DSDECL_DSTalkerProps DSTalkerProps

END_NAMESPACE_QUAZAL;
// For convenience, this declaration is directly available outside the Quazal namespace
using NS_QUAZAL DATASET(DSTalkerProps);


#endif // _DSTalkerPropsDDL_H_
