// print001.sla - print unit test

print 1;									// result: 1
print 2.0f;								// result: 2.000000
print "hi";								// result: hi

print ( 11 );							// result: 11
print ( 22.1f );						// result: 22.100000
print ( "junk" );						// result: junk

print ( 22, 33 );						// result: 22 33
print ( 1, 2, 3 );					// result: 1 2 3

print ( "v:", 1 );					// result: v: 1
print ( "v:", 2, " x:", 3 );		// result: v: 2  x: 3

string s1 = "junk:";
int    i1 = 76;

print ( s1, i1 );						// result: junk: 76
print ( s1, s1, s1, s1, s1 );		// result: junk: junk: junk: junk: junk:

print ( "sum: ", 3 + 4 );			// result: sum:  7
print ( "mult: ", 3 * 4 );			// result: mult:  12

string s2[ 4 ] = ( "dancer", "dasher", "prancer", "vixen" );
print s2;								// result: dancer dasher prancer vixen

string s3[ 4 ] = ( "comet", "cupid", "donner", "blitzen" );
print s3;								// result: comet cupid donner blitzen

// result: dancer dasher prancer vixen comet cupid donner blitzen
print ( s2, s3 );

float v[ 3 ] = ( 1.0f, 2.0f, 3.0f );
print ( "vector:", v );				// result: vector: 1.000000 2.000000 3.000000

int iv[ 4 ] = ( 1, 2, 3, 4 );
print ( "iv:", iv );					// result: iv: 1 2 3 4

print ( v, iv );						// result: 1.000000 2.000000 3.000000 1 2 3 4
print ( v, iv, 57, 78 );			// result: 1.000000 2.000000 3.000000 1 2 3 4 57 78

int fib1 = 1;
int fib2 = 1;
int fib()
{
	int temp = fib1;
	( fib1, fib2 ) = ( fib2, fib1 + fib2 );
	return temp;
}

print fib();								// result: 1
print ( fib() );							// result: 1
print ( fib(), fib() );					// result: 2 3
print ( fib(), fib(), fib() );		// result: 5 8 13

int scalework[ 3 ] = ( 1, 1, 1 );
( int xxx[3] ) scale234()
{
	scalework[0] *= 2;
	scalework[1] *= 3;
	scalework[2] *= 4;
	return scalework;
}
print scale234();							// result: 2 3 4
print ( scale234() );					// result: 4 9 16
print ( scale234(), scale234() );	// result: 8 27 64 16 81 256
