.vu

include( `VUDefines.vm4')

define( 'szeDblBuffer', eval( (szeVUMemAvailable) / 2))

define( 'irCopyCount', 'VI01')
define( 'irBaseVtxPtr', 'VI02')
define( 'irKickPtr', 'VI03')
define( 'irEndPtr', 'VI04')

define( 'irOutPtr', 'VI05')
define( 'irVtxPtr', 'VI07')
define( 'irZADCPtr', 'VI08')
define( 'irClrPtr', 'VI09')
define( 'irVtxCount', 'VI10')
define( 'irLoopCount', 'VI11')
define( 'irADCMask', 'VI12')
define( 'X_COMPONENT', '0')
define( 'Y_COMPONENT', '1')
define( 'Z_COMPONENT', '2')
define( 'W_COMPONENT', '3')

; ---------------------------------------------------------------------------------------
; Point lighting additions
;
;	Support for 2 point lights
;	Light Positions saved at memory locations	28(vi00), 29(vi00)
;	Light Colors saved at memory locations		30(vi00), 31(vi00)
;	Model scale saved at memory location		15(vi00)
;	Current Normal Ptr							16(vi00)x
;	Lighting Var								16(vi00)y
;	Lighting Flag								16(vi00)z
;	Current Color Ptr							16(vi00)w
;	RGBA Color Stack							17(vi00) - 23(vi00)
; ---------------------------------------------------------------------------------------

	.global	dbVertexColorSetCompress2AllPLight_CodeBegin
	.global	dbVertexColorSetCompress2AllPLight_CodeEnd

.dmadata dbVertexColorSetCompress2AllPLight_CodeBegin
	NOP											XTOP	irBaseVtxPtr	; get ptr to VUBuffer_1
	NOP											LOI		16.0			; for scaling z values for XYZF2 register

	; --- load and save the point light positions, colors, and model scale ---
	NOP											lq		vf01, 12(irBaseVtxPtr)		; point light 1
	NOP											lq		vf02, 13(irBaseVtxPtr)		; point light 2
	NOP											lq		vf03, 14(irBaseVtxPtr)		; point light color 1
	NOP											lq		vf04, 15(irBaseVtxPtr)		; point light color 2
	nop											lq		vf05, 16(irBaseVtxPtr)		; point light scale
	NOP											sq		vf01, 28(vi00)	
	NOP											sq		vf02, 29(vi00)
	NOP											sq		vf03, 30(vi00)
	NOP											sq		vf04, 31(vi00)
	nop											sq		vf05, 15(vi00)
												
	NOP											LQ	VF09, 0(irBaseVtxPtr)	; Load CommonToScreenMtx row 1
	NOP											LQ	VF10, 1(irBaseVtxPtr)	; Load CommonToScreenMtx row 2
	NOP											LQ	VF11, 2(irBaseVtxPtr)	; Load CommonToScreenMtx row 3
	NOP											LQ	VF12, 3(irBaseVtxPtr)	; Load CommonToScreenMtx row 4
	NOP											LQ	VF06, 5(irBaseVtxPtr)	; Load ObjToCommonMtx row1
	NOP											LQ	VF05, 4(irBaseVtxPtr)	; Load ObjToCommonMtx row1
	NOP											LQ	VF07, 6(irBaseVtxPtr)	; Load ObjToCommonMtx row1
	NOP											LQ	VF08, 7(irBaseVtxPtr)	; Load ObjToCommonMtx row1
	MULi.z	VF09, VF09, I						LQ	VF27, 8(irBaseVtxPtr)	; Load FogData { FogNear, FogFar, FogScale, FogConst }
	MULi.z	VF10, VF10, I						LQ	VF28, 9(irBaseVtxPtr)	; Load TextureMtx1 { w = alphaMul }
	MULi.z	VF11, VF11, I						LQ	VF29,10(irBaseVtxPtr)	; Load TextureMtx2
	MULi.z	VF12, VF12, I						LQ	VF30,11(irBaseVtxPtr)	; Load TextureMtx3
	NOP[E]										LQ	VF31,17(irBaseVtxPtr)	; Load GIFTag
	NOP											NOP

dbSC_ConcatMatrices:
	MULAx.xyzw	ACC, VF09, VF05x				IADDIU	VI01, VI00, 0x7fff
	MADDAy.xyzw	ACC, VF10, VF05y				IADDIU	VI01, VI01, 0x0001
	MADDAz.xyzw	ACC, VF11, VF05z				ISW.x	VI01, 0(VI00)x
	MADDw.xyzw	VF01, VF12, VF05w				NOP
												
	MULAx.xyzw	ACC, VF09, VF06x				NOP
	MADDAy.xyzw	ACC, VF10, VF06y				NOP
	MADDAz.xyzw	ACC, VF11, VF06z				NOP
	MADDw.xyzw	VF02, VF12, VF06w				NOP
												
	MULAx.xyzw	ACC, VF09, VF07x				NOP
	MADDAy.xyzw	ACC, VF10, VF07y				NOP
	MADDAz.xyzw	ACC, VF11, VF07z				NOP
	MADDw.xyzw	VF03, VF12, VF07w				NOP
												
	MULAx.xyzw	ACC, VF09, VF08x				NOP
	MADDAy.xyzw	ACC, VF10, VF08y				XGKICK	VI00
												
	MADDAz[E].xyzw  ACC, VF11, VF08z			NOP
	MADDw.xyzw	VF04, VF12, VF08w				NOP

dbSC_Setup:
	NOP											MR32.w	VF25, VF00
	ADDw.y	VF18, VF00, VF27					MR32.w	VF26, VF00
	NOP											LOI	2048
	ADDI.z	VF25, VF00, I						MR32.w	VF28, VF00
	SUBz.w	VF25, VF25, VF27z					LOI	1024
	ADDI.z	VF26, VF00, I						MR32.w	VF27, VF00
	SUBz.w	VF26, VF26, VF27z					LOI	256
	ADDI.z	VF28, VF00, I						NOP
	SUBz.w	VF28, VF28, VF27z					LOI	512
	SUBz.w	VF27, VF27, VF27z					NOP
	ADDI.z	VF27, VF00, I						NOP
	ADDx.x	VF18, VF00, VF00					NOP

dbSC_Start:
	NOP											XTOP	irBaseVtxPtr								; get ptr to VUBuffer
																									
	nop											ilw.y	vi01, 1(irBaseVtxPtr)y						; grab offset to normals
	NOP											ILW.x	irClrPtr, 1(irBaseVtxPtr)x					; grab offfsetRGBA
	NOP											ILW.w	irKickPtr, 1(irBaseVtxPtr)w					; grab offsetOutput

	nop											iadd	vi01, vi01, irBaseVtxPtr
	nop											isw.x	vi01, 16(vi00)x								; normals ptr
	nop											iadd	vi01, irClrPtr, irBaseVtxPtr				; color ptr
	nop											isw.w	vi01, 16(vi00)w								; color ptr
																									
	NOP											ILW.x	irVtxCount, 0(irBaseVtxPtr)x				; grab vertexCount
	NOP											ILW.y	irLoopCount, 0(irBaseVtxPtr)y				; grab loopCount
	NOP											ILW.z	irCopyCount, 0(irBaseVtxPtr)z				; grab copyCount
												

	NOP											IADD	irClrPtr, irBaseVtxPtr, irClrPtr
	NOP	 										IADD	irKickPtr, irBaseVtxPtr, irKickPtr			; calculate OutBuffer base ptr
	nop											isw.x	irVtxCount, 17(vi00)x						; vertex count used in lighting												
	NOP											IADDIU	irBaseVtxPtr, irBaseVtxPtr, 2				; skip LocalHdr
												
	NOP											IBEQ	irCopyCount, VI00, dbSC_Prolog				; skip GIFPacket copy if count == 0
	NOP											IADDIU	irOutPtr, irKickPtr, 0						; <ds> calculate OutBuffer moving ptr
dbSC_CopyGIFDataSetup:
	NOP											IADD	irEndPtr, irBaseVtxPtr, irCopyCount			; calculate CopyEnd ptr

dbSC_CopyGIFData:
	NOP											LQI		VF20, (irBaseVtxPtr++)							; load QW of GIFPacketData
	NOP											NOP
	NOP											NOP
	NOP											IBNE	irBaseVtxPtr, irEndPtr, dbSC_CopyGIFData
	NOP	  										SQI		VF20, (irOutPtr++)								; store GIFPacketData to OutBuffer

undefine( 'irCopyCount')

define( 'irTemp', 'VI01')
define( 'irADCBits', 'VI06')
define( 'irAlphaWork', 'VI13')
define( 'irLightTemp1', 'irTemp' )
define( 'irLightTemp2', 'irKickPtr' )
define( 'irLightTemp3', 'irBaseVtxPtr' )

dbSC_Prolog:
	nop											isw.z	irKickPtr, 16(vi00)z						;save kick ptr
	NOP											IADDIU	VI01, irVtxCount, 0x7fff
	NOP											IADDIU	VI01, VI01, 0x0001
	NOP											MFIR.x	VF31x, VI01
	NOP											IADDIU	VI14, irOutPtr, 0
	NOP											IADD	irZADCPtr, irBaseVtxPtr, irVtxCount
	NOP											IADDIU	irVtxPtr, irBaseVtxPtr, 0
	NOP											LQI		VF09, (irVtxPtr++)
	NOP											LQI		VF13, (irZADCPtr++)
	NOP											SQI		VF31, (irOutPtr++)					;store the GIFTag
	nop											isw.y	irOutPtr, 16(vi00)y					;where to save rgba from lighting
	nop											bal		irLightTemp2, computeLightingX
	nop											iaddiu	irLightTemp1, vi00, X_COMPONENT		;specify which field of vf13 to use
	MULAw.xyzw	ACC, VF04, VF00w				IADDIU	irADCMask, VI00, 0x000f
	MADDAz.xyzw	ACC, VF01, VF09z				LQI		VF05, (irClrPtr++)
	MADDAw.xyzw	ACC, VF02, VF09w				MTIR	irADCBits, VF13x
	MADDx.xyzw	VF14, VF03, VF13x				IAND	irADCBits, irADCBits, irADCMask
	NOP											LQI		VF10, (irVtxPtr++)
	nop											bal		irLightTemp2, computeLightingY
	nop											iaddiu	irLightTemp1, vi00, Y_COMPONENT		;specify which field of vf13 to use
	MULAw.xyzw	ACC, VF04, VF00w				NOP
	MADDAz.xyzw	ACC, VF01, VF10z				NOP
	MINIy.w	VF31, VF14, VF27y					MOVE.w	VF23, VF05
	NOP											LQI		VF06, (irClrPtr++)
	MADDAw.xyzw	ACC, VF02, VF10w				DIV		Q, VF00w, VF14w
	MADDy.xyzw	VF15, VF03, VF13y				NOP
	MULAw.xyz	ACC, VF30, VF00w				MFIR.z	VF31z, irADCBits
	MAXx.w	VF31, VF31, VF27x					NOP
	MADDAx.xy	ACC, VF28, VF09x				MTIR	irAlphaWork, VF06w
	MADDy.xyz	VF09, VF29, VF09y				IADD	irEndPtr, irZADCPtr, irLoopCount
	ITOF0.z	VF31, VF31							NOP
	NOP											LQI		VF11, (irVtxPtr++)
	MULq.xyz	VF14, VF14, Q					NOP
	MULq.xyz	VF09, VF09, Q					MFIR.x	VF23x, irAlphaWork
	nop											bal		irLightTemp2, computeLightingZ
	nop											iaddiu	irLightTemp1, vi00, Z_COMPONENT		;specify which field of vf13 to use
	MUL.zw	VF18, VF31, VF25					NOP
	MINIy.w	VF31, VF15, VF27					DIV		Q, VF00w, VF15w
	MULAw.xyzw	ACC, VF04, VF00w				LQI		VF07, (irClrPtr++)
	MADDAz.xyzw	ACC, VF01, VF11z				NOP
	MADDAw.xyzw	ACC, VF02, VF11w				ESUM	P, VF18
	MADDz.xyzw	VF16, VF03, VF13z				NOP
	MAXx.w	VF31, VF31, VF27x					SQ		VF09,  0(irOutPtr)
	MULAw.xyz	ACC, VF30, VF00w				NOP
	MADDAx.xy	ACC, VF28, VF10x				MTIR	irAlphaWork, VF07w
	MADDy.xyz	VF10, VF29, VF10y				NOP
	NOP											LQI		VF12, (irVtxPtr++)
	MULq.xyz	VF15, VF15, Q					NOP
	MUL.zw	VF18, VF31, VF26					MFIR.y	VF23y, irAlphaWork
	MULq.xyz	VF10, VF10, Q					bal		irLightTemp2, computeLightingW
	nop											iaddiu	irLightTemp1, vi00, W_COMPONENT		;specify which field of vf13 to use
	MINIy.w	VF31, VF16, VF27					LQI		VF08, (irClrPtr++)
	MULAw.xyzw	ACC, VF04, VF00w				DIV		Q, VF00w, VF16w
	MADDAz.xyzw	ACC, VF01, VF12z				NOP
	MADDAw.xyzw	ACC, VF02, VF12w				ESUM	P, VF18
	MADDw.xyzw	VF17, VF03, VF13w				MFP.w	VF14w, P
	MAXx.w	VF31, VF31, VF27x					MTIR	irAlphaWork, VF08w
	MULAw.xyz	ACC, VF30, VF00w				MFIR.z	VF23z, irAlphaWork
	MADDAx.xy	ACC, VF28, VF11x				NOP
	MADDy.xyz	VF11, VF29, VF11y				SQ		VF10,  3(irOutPtr)
	FTOI4.xyzw	VF14, VF14						MOVE	VF19, VF05
	MUL.zw	VF18, VF31, VF27					LQI		VF09, (irVtxPtr++)
	MULq.xyz	VF16, VF16, Q					LQI		VF13, (irZADCPtr++)
	MULq.xyz	VF11, VF11, Q					bal		irLightTemp2, computeLightingX
	nop											iaddiu	irLightTemp1, vi00, X_COMPONENT		;specify which field of vf13 to use
	ITOF0	VF24, VF23							DIV		Q, VF00w, VF17w
	MINIy.w	VF31, VF17, VF27y					LQI		VF05, (irClrPtr++)
	MULAw.xyzw	ACC, VF04, VF00w				MTIR	irADCBits, VF13x
	MADDAz.xyzw	ACC, VF01, VF09z				SQ		VF14,  2(irOutPtr)
	MADDAw.xyzw	ACC, VF02, VF09w				ESUM	P, VF18
	MADDx.xyzw	VF14, VF03, VF13x				MFP.w	VF15w, P
	MULw.xyzw	VF24, VF24, VF30w				IAND	irADCBits, irADCBits, irADCMask
	MAXx.w	VF31, VF31, VF27x					SQ		VF11,  6(irOutPtr)
	MULAw.xyz	ACC, VF30, VF00w				NOP
	MADDAx.xy	ACC, VF28, VF12x				MOVE	VF20, VF06
	MADDy.xyz	VF12, VF29, VF12y				NOP
	FTOI4.xyzw	VF15, VF15						MTIR	irAlphaWork, VF05w
	MUL.zw	VF18, VF31, VF28					LQI		VF10, (irVtxPtr++)
	MULq.xyz	VF17, VF17, Q					MFIR.z	VF31z, irADCBits
	FTOI0	VF24, VF24							MFIR.w	VF23w, irAlphaWork
	MULq.xyz	VF12, VF12, Q					bal		irLightTemp2, computeLightingY
	nop											iaddiu	irLightTemp1, vi00, Y_COMPONENT		;specify which field of vf13 to use
	NOP											DIV		Q, VF00w, VF14w
	MINIy.w	VF31, VF14, VF27y					LQI		VF06, (irClrPtr++)
	ITOF0.z	VF31, VF31							NOP

dbSC_Loop:
	MULAw.xyzw	ACC, VF04, VF00w				SQ		VF15,  5(irOutPtr)
	MADDAz.xyzw	ACC, VF01, VF10z				MOVE.w	VF19, VF24w
	MADDAw.xyzw	ACC, VF02, VF10w				ESUM	P, VF18
	MADDy.xyzw	VF15, VF03, VF13y				MFP.w	VF16w, P
	MAXx.w	VF31, VF31, VF27x					SQ		VF12,  9(irOutPtr)
	MULAw.xyz	ACC, VF30, VF00w				nop								;SQ		VF19,  1(irOutPtr)
	MADDAx.xy	ACC, VF28, VF09x				MTIR	irAlphaWork, VF06w
	MADDy.xyz	VF09, VF29, VF09y				MOVE	VF21, VF07
	FTOI4.xyzw	VF16, VF16						MR32.w	VF20, VF24
	MUL.zw	VF18, VF31, VF25					LQI		VF11, (irVtxPtr++)
	MULq.xyz	VF14, VF14, Q					MR32.xy	VF24, VF24
	MULq.xyz	VF09, VF09, Q					MFIR.x	VF23x, irAlphaWork
	nop											bal		irLightTemp2, computeLightingZ
	nop											iaddiu	irLightTemp1, vi00, Z_COMPONENT		;specify which field of vf13 to use
	MINIy.w	VF31, VF15, VF27					DIV		Q, VF00w, VF15w
	MULAw.xyzw	ACC, VF04, VF00w				LQI		VF07, (irClrPtr++)
	MADDAz.xyzw	ACC, VF01, VF11z				SQ		VF16,  8(irOutPtr)
	MADDAw.xyzw	ACC, VF02, VF11w				ESUM	P, VF18
	MADDz.xyzw	VF16, VF03, VF13z				MFP.w	VF17w, P
	MAXx.w	VF31, VF31, VF27x					SQ		VF09, 12(irOutPtr)
	MULAw.xyz	ACC, VF30, VF00w				nop								;SQ		VF20,  4(irOutPtr)
	MADDAx.xy	ACC, VF28, VF10x				MTIR	irAlphaWork, VF07w
	MADDy.xyz	VF10, VF29, VF10y				MR32.xw	VF24, VF24
	FTOI4.xyzw	VF17, VF17						MOVE	VF22, VF08
	MULq.xyz	VF15, VF15, Q					LQI		VF12, (irVtxPtr++)
	MUL.zw	VF18, VF31, VF26					MFIR.y	VF23y, irAlphaWork
	MULq.xyz	VF10, VF10, Q					MOVE.w	VF21, VF24
	nop											bal		irLightTemp2, computeLightingW
	nop											iaddiu	irLightTemp1, vi00, W_COMPONENT		;specify which field of vf13 to use
	MINIy.w	VF31, VF16, VF27					DIV		Q, VF00w, VF16w
	MULAw.xyzw	ACC, VF04, VF00w				LQI		VF08, (irClrPtr++)
	MADDAz.xyzw	ACC, VF01, VF12z				SQ		VF17, 11(irOutPtr)
	MADDAw.xyzw	ACC, VF02, VF12w				ESUM	P, VF18
	MADDw.xyzw	VF17, VF03, VF13w				MFP.w	VF14w, P
	MAXx.w	VF31, VF31, VF27x					MTIR	irAlphaWork, VF08w
	MULAw.xyz	ACC, VF30, VF00w				MFIR.z	VF23z, irAlphaWork
	MADDAx.xy	ACC, VF28, VF11x				nop								;SQ		VF21,  7(irOutPtr)
	MADDy.xyz	VF11, VF29, VF11y				SQ		VF10, 15(irOutPtr)
	FTOI4.xyzw	VF14, VF14						MOVE	VF19, VF05
	MUL.zw	VF18, VF31, VF27					LQI		VF09, (irVtxPtr++)
	MULq.xyz	VF16, VF16, Q					LQI		VF13, (irZADCPtr++)
	MULq.xyz	VF11, VF11, Q					MR32.w	VF22, VF24
	nop											bal		irLightTemp2, computeLightingX
	nop											iaddiu	irLightTemp1, vi00, X_COMPONENT		;specify which field of vf13 to use
	ITOF0	VF24, VF23							DIV		Q, VF00w, VF17w
	MINIy.w	VF31, VF17, VF27y					LQI		VF05, (irClrPtr++)
	MULAw.xyzw	ACC, VF04, VF00w				MTIR	irADCBits, VF13x
	MADDAz.xyzw	ACC, VF01, VF09z				SQ		VF14, 14(irOutPtr)
	MADDAw.xyzw	ACC, VF02, VF09w				ESUM	P, VF18
	MADDx.xyzw	VF14, VF03, VF13x				MFP.w	VF15w, P
	MULw.xyzw	VF24, VF24, VF30w				IAND	irADCBits, irADCBits, irADCMask
	MAXx.w	VF31, VF31, VF27x					SQ		VF11, 18(irOutPtr)
	MULAw.xyz	ACC, VF30, VF00w				nop											;SQ		VF22, 10(irOutPtr)
	MADDAx.xy	ACC, VF28, VF12x				MOVE	VF20, VF06
	MADDy.xyz	VF12, VF29, VF12y				IADDIU	irOutPtr, irOutPtr, 12
	FTOI4.xyzw	VF15, VF15						NOP
	MUL.zw	VF18, VF31, VF28					LQI		VF10, (irVtxPtr++)
	MULq.xyz	VF17, VF17, Q					MFIR.z	VF31z, irADCBits
	FTOI0	VF24, VF24							MOVE.w	VF23w, VF05
	MULq.xyz	VF12, VF12, Q					bal		irLightTemp2, computeLightingY
	nop											iaddiu	irLightTemp1, vi00, Y_COMPONENT		;specify which field of vf13 to use
	NOP											DIV		Q, VF00w, VF14w
	MINIy.w	VF31, VF14, VF27y					IBNE	irZADCPtr, irEndPtr, dbSC_Loop
	ITOF0.z	VF31, VF31							LQI		VF06, (irClrPtr++)

dbSC_Epilog:
	NOP											SQ		VF15,  5(irOutPtr)
	NOP											MOVE.w	VF19, VF24w
	NOP											ESUM	P, VF18
	NOP											MFP.w	VF16w, P
	NOP											SQ		VF12,  9(irOutPtr)
	NOP											nop								;SQ		VF19,  1(irOutPtr)
	NOP											MR32.w	VF20, VF24
	FTOI4.xyzw	VF16, VF16						MR32.xy	VF24, VF24
	NOP											NOP
	NOP											NOP
	NOP											nop								;SQ		VF20,  4(irOutPtr) 
	NOP											MR32.xw	VF24, VF24
	NOP											SQ		VF16,  8(irOutPtr) 
	NOP											NOP
	NOP											NOP
	NOP											MFP.w	VF17w, P
	NOP											MOVE.w	VF07, VF24
	NOP											MR32.w	VF08, VF24
	NOP											NOP
	FTOI4.xyzw	VF17, VF17						NOP
	NOP											nop								;SQ		VF07,  7(irOutPtr) 
	NOP											nop								;SQ		VF08, 10(irOutPtr) 
	NOP											NOP
	NOP											SQ		VF17, 11(irOutPtr) 
	NOP											LQ		VF31, 0(VI14)

dbSC_Kick:
	NOP											ilw.z	irKickPtr, 16(vi00)z		;retrieve kick ptr
	NOP											NOP
	NOP											NOP
												
	NOP											XGKICK	irKickPtr
	NOP											NOP
	NOP[E]										NOP
	NOP											NOP
												
	NOP											B	dbSC_Start
	NOP											NOP
	NOP											NOP

computeLightingX:
	nop											ilw.x	irLightTemp3, 17(vi00)x					;get vertex count
	nop											sq		vf21, 5(vi00)
	nop											b		dbSC_computeLighting
	nop											move	vf21, vf09
computeLightingY:
	nop											ilw.x	irLightTemp3, 17(vi00)x					;get vertex count
	nop											sq		vf21, 5(vi00)
	nop											b		dbSC_computeLighting
	nop											move	vf21, vf10
computeLightingZ:
	nop											ilw.x	irLightTemp3, 17(vi00)x					;get vertex count
	nop											sq		vf21, 5(vi00)
	nop											b		dbSC_computeLighting
	nop											move	vf21, vf11
computeLightingW:
	nop											ilw.x	irLightTemp3, 17(vi00)x					;get vertex count
	nop											sq		vf21, 5(vi00)
	nop											b		dbSC_computeLighting
	nop											move	vf21, vf12

dbSC_computeLighting:
	nop											ibgtz		irLightTemp3, lightIt				;see if we are out of verts
	nop											nop
	nop											jr			irLightTemp2
	nop											lq			vf21, 5(vi00)

lightIt:
	nop											isubiu		irLightTemp3, irLightTemp3, 1
	nop											isw.x		irLightTemp3, 17(vi00)x
	nop											sq			vf05, 0(vi00)
	nop											sq			vf06, 1(vi00)
	nop											sq			vf17, 2(vi00)
	nop											sq			vf18, 3(vi00)
	nop											sq			vf20, 4(vi00)
	nop											sq			vf29, 6(vi00)
	nop											sq			vf30, 7(vi00)
	nop											move		vf20, vf21
	nop											move		vf21, vf13


; --- Vertex Z component comes from the x,y,z,w fields of vf13
; --- The index of the field to be used is stored in irLightTemp1(0=x, 1=y, 2=z, 3=w)
; --- rotate the fields around until the desired field of vf13xyzw is in the x field
dbSC_computeLightingL1:
	nop											ibeq		irLightTemp1, vi00, dbSC_computeLightingStart
	nop											iaddi		irLightTemp1, irLightTemp1, -1
	nop											b			dbSC_computeLightingL1
	nop											mr32		vf21, vf21									;rotate which xyzw component we want into x

dbSC_computeLightingStart:
	nop											ilw.x		irLightTemp1, 16(vi00)x						;normal ptr
	nop											mr32.yz		vf20, vf20									;vf20z = vertex X, vf20w = vertex Y
	nop											mr32.w		vf20, vf21									;bring in Vertex Z
	nop											mr32.xyz	vf20, vf20									;final move to xyz
	nop											lq			vf21, 0(irLightTemp1)						;load normal for this vertex
	nop											iaddiu		irLightTemp1, irLightTemp1, 1				;inc normal ptr
	nop											isw.x		irLightTemp1, 16(vi00)x

; ------------------------------------------------------------------------------
;
; Point, Vertex, Ambient, Directional lighting with 2 Point lights, 3 Directional, 1 ambient
;
; Assuming:
;		Light Positions are in VF05, VF06
;		Light Colors are in VF17, VF18
;		Light Ambient in VF16
;		Vertex color in vf26
;		Vertex in VF20
;		Normal in VF21
;		Temporary registers used: vf24, vf25, vf27, vf29, vf30
;		Color returned in vf26
; ------------------------------------------------------------------------------
dbSC_PLight:
	; --- get the 2 lights
	nop									lq			vf05, 28( vi00 )
	itof15.xyz	vf21, vf21				lq			vf06, 29( vi00 )

	; --- Compute Vectors to Lights	- Assuming light positions are in VF05xyz, VF06xyz
	; --- Important! Light attenuation coefficient is in VF05w, VF06w
	;
	sub.xyz		VF29, VF05, VF20		lq			vf17, 15( vi00 )								;Light position1 - Vertex
	sub.xyz		VF30, VF06, VF20		lq			vf18, 31( vi00 ) 								;Light position2 - Vertex
										
	nop									mfp.w		vf20w, p										;save p register
	nop									sq			vf24, 8(vi00)
	mul.xyz		vf29, vf29, vf17xyz		sq			vf16, 9(vi00)									;vf17 contains model scale that needs to be applied
	mul.xyz		vf30, vf30, vf17xyz		lq			vf17, 30( vi00 )
	nop									move		vf16, vf00
	nop									sq			vf27, 10(vi00)
	addw.xyz	vf27, vf00, vf00w		erleng		p, vf29											;start 1/length1 calculation - 24 cycles
	mul.xyz		vf24, vf30, vf30		ilw.w		irLightTemp1, 16(vi00)w							;VF30x*VF30x,VF30y*VF30y,VF30z*VF30z
	mul.xyz		vf29, vf29, vf21		sq			vf25, 11(vi00)									;Light1 * Normal
	mul.xyz		vf30, vf30, vf21		loi			128.0											;Light2 * Normal
	addi.w		vf16, vf16, i			sq			vf26, 12(vi00)
	mulax.x		ACC, vf27x, vf24x		lq			vf26, 0(irLightTemp1)							;vertex color
	madday.x	ACC, vf27x, vf24y		iaddiu		irLightTemp1, irLightTemp1, 1
	maddz.x		vf24, vf27x, vf24z		isw.w		irLightTemp1, 16(vi00)w							;VF24 = 1/length2^2
	nop									move.xyz	vf20, vf00
	nop									nop
	itof0.xyzw	vf26, vf26				rsqrt		q, vf00w, vf24x									;start 1/length2 calculation - 13 cycles
	nop									waitq
	mulq.y		vf24, vf27y, q			nop
	nop									waitp
	nop									mfp.x		vf24x, p										;Now have 1/length1, 1/length2
	nop									lq			vf27, 10(vi00)
	nop									esum		p, vf20
	nop									ilw.y		irLightTemp1, 16(vi00)y
	mul.xy		vf25, vf24, vf24		nop															;1/lenght1^2, 1/length2^2
	nop									nop
	nop									nop
	nop									iaddiu		irLightTemp1, irLightTemp1, 3
	mul.xy		vf25, vf25, vf24		lq			vf21, 5(vi00)									;1/length1^3, l/length2^3
	mulx.w		vf17, vf17, vf00x		nop
	mulx.w		vf18, vf18, vf00x		isw.y		irLightTemp1, 16(vi00)y							;inc rgba store index
	nop									nop
	mulax.x		ACC, vf25x, vf29x		lq			vf24, 8(vi00)
	madday.x	ACC, vf25x, vf29y		nop
	maddz.x		vf29, vf25x, vf29z		nop															;light1 dotted, normalized, and attenuated
	mulax.y		ACC, vf25y, vf30x		nop
	madday.y	ACC, vf25y, vf30y		nop
	maddz.y		vf29, vf25y, vf30z		lq			vf25, 11(vi00)									;light2 dotted, normalized, and attenuated
	nop									nop
	nop									nop
	nop									nop
	mulw.x		vf29, vf29, vf05w		lq			vf05, 0(vi00)									;apply attenuation
	mulw.y		vf29, vf29, vf06w		nop
	nop									lq			vf06, 1(vi00)
	nop									nop
	maxx.xy		vf29, vf29, vf00x		nop															;clamp to zero
	nop									nop
	nop									nop
	nop									nop
	mulax.xyz	ACC, vf17, vf29x		loi			255.0											;light1 * color1
	madday.xyz	ACC, vf18, vf29y		lq			vf17, 2(vi00)									;light2 * color2
	maddaw.xyzw	ACC, vf26, vf00w		nop															;vertex color
	maddw.xyz	vf26, vf16, vf00w		nop															;ambient
	nop									nop
	nop									lq			vf18, 3(vi00)
	nop									nop
	minii.xyzw	vf26, vf26, I			lq			vf29, 6(vi00)
	nop									nop
	nop									lq			vf16, 9(vi00)
	nop									nop
	ftoi0.xyzw	vf26, vf26				lq			vf20, 4(vi00)
	nop									nop
	nop									lq			vf30, 7(vi00)
	nop									nop
	nop									sq			vf26, -2(irLightTemp1)
	nop									jr			irLightTemp2
	nop									lq			vf26, 12(vi00)

.enddmadata
dbVertexColorSetCompress2AllPLight_CodeEnd:


