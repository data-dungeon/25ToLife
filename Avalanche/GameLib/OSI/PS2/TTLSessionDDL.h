// DO NOT MODIFY THIS FILE, IT HAS BEEN GENERATED.
// File generated by Quazal DDL Compiler, Version 4.1 [SP2] (Build 1224.83)
// Copyright (C) 1998-2004, Quazal Technologies Inc.

#ifndef _TTLSessionDDL_H_
#define _TTLSessionDDL_H_

#include <NetZ.h>
#include "Services/MatchMaking/Protocol/MatchMakingServiceProperties.h"
#include "Services/MatchMaking/Protocol/Gathering.h"

BEGIN_NAMESPACE_QUAZAL;
class TTLSession;
END_NAMESPACE_QUAZAL;

BEGIN_NAMESPACE_QUAZAL;

class DDLCLASS(TTLSession): public Gathering {
public:
    DDLCLASS(TTLSession)() {};
    DDLCLASS(TTLSession)(const DDLCLASS(TTLSession) &oOther):
        levelName(oOther.levelName),
        levelIndex(oOther.levelIndex),
        gameType(oOther.gameType),
        timeLimit(oOther.timeLimit),
        scoreLimit(oOther.scoreLimit),
        tagLimit(oOther.tagLimit),
        bestOfSeries(oOther.bestOfSeries),
        maxPlayers(oOther.maxPlayers),
        reservedPlayers(oOther.reservedPlayers),
        totalConnectedPlayers(oOther.totalConnectedPlayers),
        isCustomQuery(oOther.isCustomQuery),
        isRanked(oOther.isRanked),
        isPrivate(oOther.isPrivate),
        playersRespawn(oOther.playersRespawn),
        friendlyFire(oOther.friendlyFire),
        apprehension(oOther.apprehension),
        arcadeDamage(oOther.arcadeDamage),
        selfDamage(oOther.selfDamage),
        alternatingTeams(oOther.alternatingTeams)
    {
    }
    virtual ~DDLCLASS(TTLSession)() {};
    const DDLCLASS(TTLSession) &operator=(const DDLCLASS(TTLSession) &oOther);
    qBool operator==(const DDLCLASS(TTLSession) &oOther) const;
    static void Add(Message *pMessageToSend, const DDLCLASS(TTLSession) &oValue);
    static void Extract(Message *pReceivedMessage, DDLCLASS(TTLSession) *pValue);
    DDLTYPE(string)::CPPType levelName;
    DDLTYPE(uint32)::CPPType levelIndex;
    DDLTYPE(uint32)::CPPType gameType;
    DDLTYPE(uint32)::CPPType timeLimit;
    DDLTYPE(uint32)::CPPType scoreLimit;
    DDLTYPE(uint32)::CPPType tagLimit;
    DDLTYPE(uint32)::CPPType bestOfSeries;
    DDLTYPE(uint32)::CPPType maxPlayers;
    DDLTYPE(uint32)::CPPType reservedPlayers;
    DDLTYPE(uint32)::CPPType totalConnectedPlayers;
    DDLTYPE(bool)::CPPType isCustomQuery;
    DDLTYPE(bool)::CPPType isRanked;
    DDLTYPE(bool)::CPPType isPrivate;
    DDLTYPE(bool)::CPPType playersRespawn;
    DDLTYPE(bool)::CPPType friendlyFire;
    DDLTYPE(bool)::CPPType apprehension;
    DDLTYPE(bool)::CPPType arcadeDamage;
    DDLTYPE(bool)::CPPType selfDamage;
    DDLTYPE(bool)::CPPType alternatingTeams;
    public:
	_PR_gathering_methods_pudecl();
    protected:
	_PR_gathering_methods_prdecl();
};


class DDLTYPE(TTLSession): public DDLType {
public:
    typedef TTLSession CPPType;
    static void Add(Message* pMessageToSend, const DDLCLASS(TTLSession)& oTTLSession) {
        DDLCLASS(TTLSession)::Add(pMessageToSend,oTTLSession);
    }
    static void Extract(Message* pReceivedMessage, DDLCLASS(TTLSession)* pTTLSessionToRefresh) {
        DDLCLASS(TTLSession)::Extract(pReceivedMessage,pTTLSessionToRefresh);
    }
};

class TTLSession: public DDLCLASS(TTLSession) {
};


END_NAMESPACE_QUAZAL;

#endif // _TTLSessionDDL.h_H_
